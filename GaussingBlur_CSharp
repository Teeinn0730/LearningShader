private void OnRenderImage(RenderTexture source, RenderTexture destination)
    {
        //OnRenderImage只能使用在Built_in管線當中，URP及HDRP請使用ScriptableRenderPass API。
        //OnRenderImage is not supported in the Scriptable Render Pipeline. To create custom fullscreen effects in the Universal Render Pipeline (URP), use the ScriptableRenderPass API. To create custom fullscreen effects in the High Definition Render Pipeline (HDRP), use a Fullscreen Custom Pass.
        //https://docs.unity3d.com/ScriptReference/Camera.OnRenderImage.html
        if (PubMat != null)
        {

            //Gaussing Blur
            int RenderTexWidth = source.width / DownSample;
            int RenderTexHeight = source.height / DownSample;
            RenderTexture buffer = RenderTexture.GetTemporary(RenderTexWidth,RenderTexHeight,0);
            buffer.filterMode = FilterMode.Bilinear;
            Graphics.Blit(source,buffer);
            for (int i = 0; i < BlurIntensity; i++)
            {
                PubMat.SetFloat("_BlurSize",1+i*blurSpread);
                RenderTexture buffer2 = RenderTexture.GetTemporary(RenderTexWidth,RenderTexHeight,0);
                Graphics.Blit(buffer,buffer2,PubMat,0); 
                RenderTexture.ReleaseTemporary(buffer);
                buffer = buffer2;
                buffer2 = RenderTexture.GetTemporary(RenderTexWidth,RenderTexHeight,0);
                Graphics.Blit(buffer,buffer2,PubMat,1);
                RenderTexture.ReleaseTemporary(buffer);
                buffer = buffer2;
                //RenderTexture.ReleaseTemporary(buffer2);
            }
            Graphics.Blit(buffer,destination);
            RenderTexture.ReleaseTemporary(buffer);
            Debug.Log("Succes");
        }
    }
